name: Deploy and Audit
on: [pull_request]
jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Vercel Action
              id: vercel_action
              uses: amondnet/vercel-action@v20
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
                  github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
                  # vercel-args: '--prod' #Optional
                  vercel-org-id: ${{ secrets.ORG_ID}} #Required
                  vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
            - name: Add comment to PR
              id: loading_comment_to_pr
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: ${{ github.event.pull_request.number }}
                  header: lighthouse
                  message: |
                      Running Lighthouse audit...
            - name: Audit URLs using Lighthouse
              id: lighthouse_audit
              uses: treosh/lighthouse-ci-action@v7
              with:
                  urls: |
                      ${{ steps.vercel_action.outputs.preview-url }}
                  budgetPath: '.github/lighthouse/budget.json'
                  configPath: '.github/lighthouse/lighthouserc.json'
                  uploadArtifacts: true
                  temporaryPublicStorage: true
            - name: Format lighthouse score
              id: format_lighthouse_score
              uses: actions/github-script@v4
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary

                      const links = ${{ steps.lighthouse_audit.outputs.links }}

                      const formatResult = (res) => Math.round((res * 100));

                      Object.keys(result).forEach(key => result[key] = formatResult(result[key]));

                      const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

                      const comment = [
                          `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                          '| Category | Score |',
                          '| --- | --- |',
                          `| ${score(result.performance)} Performance | ${result.performance} |`,
                          `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                          `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                          `| ${score(result.seo)} SEO | ${result.seo} |`,
                          `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                          ' ',
                          `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
                      ].join('\n')

                      core.setOutput("comment", comment);
            - name: Add comment to PR
              id: comment_to_pr
              uses: marocchino/sticky-pull-request-comment@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: ${{ github.event.pull_request.number }}
                  header: lighthouse
                  message: |
                      ${{ steps.format_lighthouse_score.outputs.comment }}
